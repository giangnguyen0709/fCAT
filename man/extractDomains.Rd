% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extractGenome.R
\name{extractDomains}
\alias{extractDomains}
\title{A domains file can contains lines of many different genomes. This 
function extract the domains of a specific genome}
\usage{
extractDomains(domains, genome, reverse = FALSE)
}
\arguments{
\item{domains}{The domains in data.frame}

\item{genome}{The genome ID of the genome, whose domains need to be extracted}

\item{reverse}{if reverse = TRUE then the function will not extract the lines
of the genome but remove it}
}
\value{
the domains of the interested genome in data.frame
}
\description{
A domains file can contains lines of many different genomes. This 
function extract the domains of a specific genome
}
\examples{
## Create a pseudo domains table
V1 <- c(
    "1001705at2759#1001705at2759|HUMAN@9606@3|Q15291|1",
    "551907at2759#551907at2759|AMPQU@400682@2|400682_0:001490|1"
)
V2 <- c(
    "1001705at2759|HOMSA@9606@2|9606_0:00004c",
    "551907at2759|AMPQU@400682@2|400682_0:001490|1"
)
V3 <- c(538, 1087)
V4 <- c("pfam_WD40", "flps_SINGLE_{G}")
V5 <- c(17, 1030)
V6 <- c(52, 1058)
V7 <- c(0.2265, 0.0936)
V8 <- c("Y", "Y")
domains <- data.frame(V1, V2, V3, V4, V5, V6, V7, V8)
## extract domains table of HUMAN@9606@3
newDomains <- extractDomains(domains, "HUMAN@9606@3")
print.data.frame(newDomains)
}
